1. Clean Code Definition
- should be readable and meaningful
- should reduce cognitive load
- should be concise and "to the point"
- should avoid unintuitive names, complex nesting and big code blocks
- should follow common best practices and patterns
- should be fun to write and to maintain

1.1. Focus on "naming" things
- names should be meaningful
- name casing {
    snake_case e.g. Python -> Variables, functions, methods
    camelCase e.g. Java, JavaScript -> Variables, functions, methods
    PascalCase e.g. Python, Java, JavaScript ->  Classes
    kebab-case e.g. HTML -> Custom HTML Elements
}

1.2. Code Structure, Comments and Formatting
- avoid comments if we use proper names in our code
- comment out code just for reference, if not, just delete it
- using comments for explanations which can't be replaced by good names
- comments can be used for to do's to know what to do in our code
- use code formatting to improve readability
- formatting rules differ between languages
- keep related concepts close together
- break long statements into shorter ones
